{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MoodMelody\\\\fyp-frontend\\\\src\\\\components\\\\Processing.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./main.css\";\nimport \"./processing.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Processing() {\n  _s();\n  const [keyword, setKeyword] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedKeyword = localStorage.getItem(\"selectedKeyword\");\n    if (storedKeyword) setKeyword(storedKeyword);\n\n    // Simulate processing steps and update progress\n    let prog = 0;\n    const interval = setInterval(() => {\n      prog += 25;\n      if (prog > 100) {\n        clearInterval(interval);\n        navigate(\"/result\"); // go to result page when done\n      } else {\n        setProgress(prog);\n      }\n    }, 2000); // every 2 sec simulate next step\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"top-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/fyp-images/iconmusic.webp`,\n        width: \"50\",\n        height: \"55\",\n        alt: \"MoodMelody Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \" \", \"MoodMelody\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"top-Description\",\n      children: \"AI Processing in Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploads-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/fyp-images/vedio.jpg`,\n        alt: \"Video\",\n        className: \"vedio-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"keyword-heading\",\n        children: [\"Keyword = \\u201C\", keyword || \"—\", \"\\u201D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-fill\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: \"Object Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: \"Music Recommendation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: \"Facial Expression Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: \"Story Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cancel-btn\",\n      onClick: () => navigate(\"/upload\"),\n      children: \"Cancel Processing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Processing, \"WbJGcs3oB71vhXXo4p9gmaoqQiI=\", false, function () {\n  return [useNavigate];\n});\n_c = Processing;\nexport default Processing;\nvar _c;\n$RefreshReg$(_c, \"Processing\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","Processing","_s","keyword","setKeyword","progress","setProgress","navigate","storedKeyword","localStorage","getItem","prog","interval","setInterval","clearInterval","children","className","src","process","env","PUBLIC_URL","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/MoodMelody/fyp-frontend/src/components/Processing.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./main.css\";\r\nimport \"./processing.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Processing() {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const storedKeyword = localStorage.getItem(\"selectedKeyword\");\r\n    if (storedKeyword) setKeyword(storedKeyword);\r\n\r\n    // Simulate processing steps and update progress\r\n    let prog = 0;\r\n    const interval = setInterval(() => {\r\n      prog += 25;\r\n      if (prog > 100) {\r\n        clearInterval(interval);\r\n        navigate(\"/result\"); // go to result page when done\r\n      } else {\r\n        setProgress(prog);\r\n      }\r\n    }, 2000); // every 2 sec simulate next step\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"top-heading\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/fyp-images/iconmusic.webp`}\r\n          width=\"50\"\r\n          height=\"55\"\r\n          alt=\"MoodMelody Logo\"\r\n        />{\" \"}\r\n        MoodMelody\r\n      </h1>\r\n\r\n      <p className=\"top-Description\">AI Processing in Progress</p>\r\n\r\n      <div className=\"uploads-flex\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/fyp-images/vedio.jpg`}\r\n          alt=\"Video\"\r\n          className=\"vedio-icon\"\r\n        />\r\n        <h3 className=\"keyword-heading\">Keyword = “{keyword || \"—\"}”</h3>\r\n      </div>\r\n\r\n      <div className=\"progress-bar\">\r\n        <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\r\n      </div>\r\n\r\n      <div className=\"processing-content\">\r\n        <div className=\"processing-steps\">\r\n          <div className=\"step\">Object Detection</div>\r\n          <div className=\"step\">Music Recommendation</div>\r\n          <div className=\"step\">Facial Expression Analysis</div>\r\n          <div className=\"step\">Story Generation</div>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"cancel-btn\" onClick={() => navigate(\"/upload\")}>\r\n        Cancel Processing\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Processing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}